params {
	

	// WORKFLOW PARAMETERS TO REVIEW AT EACH RUN
	// ----------------------------------------
	// Date range to search for prolonged infections within. Must be for-
	// matted like "1996-09-28"
	min_date = ""
	max_date = ""

	// U.S. State or Canadian province to search within
	geography = "USA"

	// Whether to use pangolin to reclassify sequences with the latest
	// version
	update_pango = true

	// Whether to use pango lineages in NCBI metadata instead of re-
	// classifying with pangolin
	inspect_ncbi_metadata = false

	// Whether to run date comparison
	compare_lineage_dates = false

	// Whether to construct a distance matrix to identify evolutionarily advanced
	// viruses
	make_distance_matrix = true

	// Distance matrix identity threshold
	id_threshold = 0.97

	// Random seed
	seed = 14
	
	// Where to place results
	results = "$launchDir/results"
	
	// How many days past lineage designation to consider an infection prolonged
	days_of_infection = 240

	// The minimum number of days of infection required to download a FASTA sequence
	duration_of_interest = 600
	// ----------------------------------------
	

	
	// WORKFLOW PARAMETERS THAT SHOULD NOT BE CHANGED
	// ----------------------------------------
	// resources folder
	resources = "$baseDir/resources"

	// SARS-CoV-2 Wuhan-1 reference sequence (NCBI )
	
	// date for docker image tagging
	date = new java.util.Date().format('yyyyMMdd')

	// Find the maximum number of cpus to allocate for local execution that
	// is not on an HPC cluster
	max_local_cpus = Math.floor( Runtime.getRuntime().availableProcessors() / 4 )

	// ----------------------------------------
	

}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
	enabled = false
	file    = "${params.results}/finder-run-report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = false
	overwrite = true
	file = 'long-infection-finder.png'
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = false


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process {
			
			withName:UPDATE_PANGO_CONTAINER {
				container = "staphb/pangolin:latest"
				docker.runOptions = '--pull=always'
			}
			withName:DOWNLOAD_NCBI_PACKAGE {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:DOWNLOAD_REFSEQ {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:GET_DESIGNATION_DATES {
				container = "curlimages/curl:8.00.1"
			}
			withName:REMOVE_FASTA_GAPS {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:SEPARATE_BY_MONTH {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:CLUSTER_BY_DISTANCE {
				container = "biocontainers/vsearch:v2.10.4-1-deb_cv1"
			}
			withName:BUILD_CENTROID_TREE {
				container = "staphb/iqtree:1.6.7"
			}
			withName:COLLATE_CLUSTER_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:HIGH_THROUGHPUT_PANGOLIN {
				container = "staphb/pangolin:latest"
			}
			withName:CONCAT_PANGOLIN_REPORTS {
				container = "nrminor/nf-r:28141"
			}
			withName:FIND_CANDIDATE_LINEAGES_BY_DATE {
				container = "nrminor/nf-r:28141"
			}
			withName:FILTER_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:SEARCH_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:COLLATE_NCBI_METADATA_CANDIDATES {
				container = "nrminor/nf-r:28141"
			}

		}
		
	}

	chtc {

		docker.enabled = false
		singularity.enabled = true
		conda.enabled = false

		executor {

			name = 'local'
			cpus = 32
			memory = 32.GB

			}

		process {
			
			withName:UPDATE_PANGO_CONTAINER {
				container = "staphb/pangolin:latest"
				docker.runOptions = '--pull=always'
			}
			withName:DOWNLOAD_NCBI_PACKAGE {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:DOWNLOAD_REFSEQ {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:GET_DESIGNATION_DATES {
				container = "curlimages/curl:8.00.1"
			}
			withName:REMOVE_FASTA_GAPS {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:SEPARATE_BY_MONTH {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:CLUSTER_BY_DISTANCE {
				container = "biocontainers/vsearch:v2.10.4-1-deb_cv1"
			}
			withName:BUILD_CENTROID_TREE {
				container = "staphb/iqtree:1.6.7"
			}
			withName:COLLATE_CLUSTER_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:HIGH_THROUGHPUT_PANGOLIN {
				container = "staphb/pangolin:latest"
			}
			withName:CONCAT_PANGOLIN_REPORTS {
				container = "nrminor/nf-r:28141"
			}
			withName:FIND_CANDIDATE_LINEAGES_BY_DATE {
				container = "nrminor/nf-r:28141"
			}
			withName:FILTER_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:SEARCH_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:COLLATE_NCBI_METADATA_CANDIDATES {
				container = "nrminor/nf-r:28141"
			}

		}
			
	}
	
	docker {
		
		docker.enabled = false
		singularity.enabled = true
		conda.enabled = false
		
		process {
			
			withName:UPDATE_PANGO_CONTAINER {
				container = "staphb/pangolin:latest"
				docker.runOptions = '--pull=always'
			}
			withName:DOWNLOAD_NCBI_PACKAGE {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:DOWNLOAD_REFSEQ {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:GET_DESIGNATION_DATES {
				container = "curlimages/curl:8.00.1"
			}
			withName:REMOVE_FASTA_GAPS {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:SEPARATE_BY_MONTH {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:CLUSTER_BY_DISTANCE {
				container = "biocontainers/vsearch:v2.10.4-1-deb_cv1"
			}
			withName:BUILD_CENTROID_TREE {
				container = "staphb/iqtree:1.6.7"
			}
			withName:COLLATE_CLUSTER_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:HIGH_THROUGHPUT_PANGOLIN {
				container = "staphb/pangolin:latest"
			}
			withName:CONCAT_PANGOLIN_REPORTS {
				container = "nrminor/nf-r:28141"
			}
			withName:FIND_CANDIDATE_LINEAGES_BY_DATE {
				container = "nrminor/nf-r:28141"
			}
			withName:FILTER_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:SEARCH_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:COLLATE_NCBI_METADATA_CANDIDATES {
				container = "nrminor/nf-r:28141"
			}

		}
		
	}
	
	singularity {
		
		docker.enabled = false
		singularity.enabled = true
		conda.enabled = false
		
		process {
			
			withName:UPDATE_PANGO_CONTAINER {
				container = "staphb/pangolin:latest"
				docker.runOptions = '--pull=always'
			}
			withName:DOWNLOAD_NCBI_PACKAGE {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:DOWNLOAD_REFSEQ {
				container = "biocontainers/ncbi-datasets-cli:14.2.2_cv2"
			}
			withName:GET_DESIGNATION_DATES {
				container = "curlimages/curl:8.00.1"
			}
			withName:REMOVE_FASTA_GAPS {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:SEPARATE_BY_MONTH {
				container = "biocontainers/biopython:v1.73dfsg-1-deb-py3_cv1"
			}
			withName:CLUSTER_BY_DISTANCE {
				container = "biocontainers/vsearch:v2.10.4-1-deb_cv1"
			}
			withName:BUILD_CENTROID_TREE {
				container = "staphb/iqtree:1.6.7"
			}
			withName:COLLATE_CLUSTER_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:HIGH_THROUGHPUT_PANGOLIN {
				container = "staphb/pangolin:latest"
			}
			withName:CONCAT_PANGOLIN_REPORTS {
				container = "nrminor/nf-r:28141"
			}
			withName:FIND_CANDIDATE_LINEAGES_BY_DATE {
				container = "nrminor/nf-r:28141"
			}
			withName:FILTER_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:SEARCH_NCBI_METADATA {
				container = "nrminor/nf-r:28141"
			}
			withName:COLLATE_NCBI_METADATA_CANDIDATES {
				container = "nrminor/nf-r:28141"
			}

		}
		
	}
}


// MANIFEST
manifest {
	homePage = 'https://github.com/dholab/long-infection-finder'
	mainScript = 'long-infection-finder.nf'
	defaultBranch = 'main'
	description = 'Workflow for discovering SARS-CoV-2 prolonged infection candidates in a INSDC repository'
	author = 'Nicholas R. Minor'
}
